
# Set the minimum version of cmake required to 2.6
cmake_minimum_required( VERSION 3.0 )
project(Netgen VERSION 4.9.11 LANGUAGES C CXX)

SET( PROJECT_NAMESPACE_PREFIX NETGEN )
SET( LIBRARY_TARGET_NAME nglib )
# STRING( TOUPPER ${LIBRARY_TARGET_NAME}  )
SET( NETGEN_MAJOR_VERSION "4" )
SET( NETGEN_MINOR_VERSION "9" )
SET( NETGEN_PATCH_VERSION "11" )

SET( PACKAGE_VERSION \"${NETGEN_MAJOR_VERSION}.${NETGEN_MINOR_VERSION}.${NETGEN_PATCH_VERSION}\" ) 

# Set up library options
# Generic library options
OPTION( ${PROJECT_NAMESPACE_PREFIX}_BUILD_STATIC_LIB "Build static zlib" TRUE )
OPTION( ${PROJECT_NAMESPACE_PREFIX}_INSTALL_CONFIG "Install a config file for the library" FALSE )

# Specific library options
OPTION( ${PROJECT_NAMESPACE_PREFIX}_PARALLEL_THREADS "Use parallel threads for netgen" FALSE ) 

IF( ${PROJECT_NAMESPACE_PREFIX}_BUILD_STATIC_LIB )
	SET( LIBRARY_BUILD_TYPE STATIC )
	SET( LIBRARY_INSTALL_TYPE ARCHIVE )
ELSE( ${PROJECT_NAMESPACE_PREFIX}_BUILD_STATIC_LIB )
	SET( LIBRARY_BUILD_TYPE SHARED )
	SET( LIBRARY_INSTALL_TYPE LIBRARY )
	IF( WIN32 )
		SET( LIBRARY_INSTALL_TYPE RUNTIME )
	ENDIF( WIN32 )
ENDIF( ${PROJECT_NAMESPACE_PREFIX}_BUILD_STATIC_LIB )

# Set required definitions for building netgen.  This should really
# be in a config.h header file but that's more changes.
IF( WIN32 )
	SET( NETGEN_DEFINITIONS -D_CRT_SECURE_NO_WARNINGS )
ENDIF( WIN32 )
IF( NOT ${PROJECT_NAMESPACE_PREFIX}_PARALLEL_THREADS )
	SET( NETGEN_DEFINITIONS ${NETGEN_DEFINITIONS} -DNO_PARALLEL_THREADS )
ENDIF( NOT ${PROJECT_NAMESPACE_PREFIX}_PARALLEL_THREADS )
IF( NOT ${PROJECT_NAMESPACE_PREFIX}_BUILD_STATIC_LIB )
	SET( NETGEN_DEFINITIONS ${NETGEN_DEFINITIONS} -DNGLIB_SHARED_LIB )
ENDIF( NOT ${PROJECT_NAMESPACE_PREFIX}_BUILD_STATIC_LIB )

ADD_DEFINITIONS( ${NETGEN_DEFINITIONS}  )

INCLUDE_DIRECTORIES( libsrc/include )
INCLUDE_DIRECTORIES( libsrc/general )

SET( CMAKE_DEBUG_POSTFIX "d" )
SET( CMAKE_MFC_FLAG 0 )

# Defines NGLIB_SRCS all the sources required for a stripped down library
# suitable for cmgui
INCLUDE( nglib-cmgui.cmake )

IF( ${CMAKE_SYSTEM_NAME} STREQUAL "Linux" AND ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64" )
	INCLUDE( nglib-cmgui-fpic.cmake )
	SET_SOURCE_FILES_PROPERTIES(${NGLIB_SRCS}
		PROPERTIES COMPILE_FLAGS "-fPIC")
ENDIF( ${CMAKE_SYSTEM_NAME} STREQUAL "Linux" AND ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64" )

# Configure header file
CONFIGURE_FILE( config.h.cmake
	${CMAKE_CURRENT_BINARY_DIR}/config/ng-config.h @ONLY )

# Add configured header file to header file search path
include_directories( ${CMAKE_CURRENT_BINARY_DIR}/config )

# Create library target
add_library( ${LIBRARY_TARGET_NAME} ${LIBRARY_BUILD_TYPE} ${NGLIB_SRCS} )

# Set the install targets
install( TARGETS ${LIBRARY_TARGET_NAME}
    EXPORT netgen-config ${LIBRARY_INSTALL_TYPE}
	DESTINATION lib
	INCLUDES DESTINATION include)
install( FILES ${CMAKE_CURRENT_SOURCE_DIR}/nglib/nglib.h
	DESTINATION include )

install(EXPORT netgen-config 
		DESTINATION ${PACKAGE_CONFIG_DIR})
include(CMakePackageConfigHelpers)
WRITE_BASIC_PACKAGE_VERSION_FILE(${CMAKE_CURRENT_BINARY_DIR}/netgen-config-version.cmake
    COMPATIBILITY AnyNewerVersion)
install(FILES 
    ${CMAKE_CURRENT_BINARY_DIR}/netgen-config-version.cmake
    #${CMAKE_CURRENT_BINARY_DIR}/hypre-config-dependencies.cmake
    DESTINATION ${PACKAGE_CONFIG_DIR})

